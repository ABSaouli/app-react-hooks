// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Testing shallow render <App /> 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "FallbackComponent": [Function],
      "children": <BrowserRouter>
        <React.Fragment>
          <withRouter(Header) />
          <UNDEFINED
            fallback={
              <h1>
                Loading ...
              </h1>
            }
          >
            <React.Fragment>
              <LoginRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_ctor": [Function],
                    "_result": null,
                    "_status": -1,
                  }
                }
                exact={true}
                path="/"
              />
              <ProtectedRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_ctor": [Function],
                    "_result": null,
                    "_status": -1,
                  }
                }
                path="/orders"
              />
              <ProtectedRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_ctor": [Function],
                    "_result": null,
                    "_status": -1,
                  }
                }
                path="/parcel/edit/:id"
              />
              <ProtectedRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_ctor": [Function],
                    "_result": null,
                    "_status": -1,
                  }
                }
                path="/order/edit/:id"
              />
              <ProtectedRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_ctor": [Function],
                    "_result": null,
                    "_status": -1,
                  }
                }
                path="/home"
              />
            </React.Fragment>
          </UNDEFINED>
        </React.Fragment>
      </BrowserRouter>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <React.Fragment>
          <withRouter(Header) />
          <UNDEFINED
            fallback={
              <h1>
                Loading ...
              </h1>
            }
          >
            <React.Fragment>
              <LoginRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_ctor": [Function],
                    "_result": null,
                    "_status": -1,
                  }
                }
                exact={true}
                path="/"
              />
              <ProtectedRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_ctor": [Function],
                    "_result": null,
                    "_status": -1,
                  }
                }
                path="/orders"
              />
              <ProtectedRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_ctor": [Function],
                    "_result": null,
                    "_status": -1,
                  }
                }
                path="/parcel/edit/:id"
              />
              <ProtectedRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_ctor": [Function],
                    "_result": null,
                    "_status": -1,
                  }
                }
                path="/order/edit/:id"
              />
              <ProtectedRoute
                component={
                  Object {
                    "$$typeof": Symbol(react.lazy),
                    "_ctor": [Function],
                    "_result": null,
                    "_status": -1,
                  }
                }
                path="/home"
              />
            </React.Fragment>
          </UNDEFINED>
        </React.Fragment>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <withRouter(Header) />,
            <UNDEFINED
              fallback={
                <h1>
                  Loading ...
                </h1>
              }
            >
              <React.Fragment>
                <LoginRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  exact={true}
                  path="/"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/orders"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/parcel/edit/:id"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/order/edit/:id"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/home"
                />
              </React.Fragment>
            </UNDEFINED>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <React.Fragment>
                <LoginRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  exact={true}
                  path="/"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/orders"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/parcel/edit/:id"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/order/edit/:id"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/home"
                />
              </React.Fragment>,
              "fallback": <h1>
                Loading ...
              </h1>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <LoginRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    exact={true}
                    path="/"
                  />,
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/orders"
                  />,
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/parcel/edit/:id"
                  />,
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/order/edit/:id"
                  />,
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/home"
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    },
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    },
                    "path": "/orders",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    },
                    "path": "/parcel/edit/:id",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    },
                    "path": "/order/edit/:id",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "component": Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    },
                    "path": "/home",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": Symbol(react.fragment),
            },
            "type": Symbol(react.suspense),
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "FallbackComponent": [Function],
        "children": <BrowserRouter>
          <React.Fragment>
            <withRouter(Header) />
            <UNDEFINED
              fallback={
                <h1>
                  Loading ...
                </h1>
              }
            >
              <React.Fragment>
                <LoginRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  exact={true}
                  path="/"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/orders"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/parcel/edit/:id"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/order/edit/:id"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/home"
                />
              </React.Fragment>
            </UNDEFINED>
          </React.Fragment>
        </BrowserRouter>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <React.Fragment>
            <withRouter(Header) />
            <UNDEFINED
              fallback={
                <h1>
                  Loading ...
                </h1>
              }
            >
              <React.Fragment>
                <LoginRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  exact={true}
                  path="/"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/orders"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/parcel/edit/:id"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/order/edit/:id"
                />
                <ProtectedRoute
                  component={
                    Object {
                      "$$typeof": Symbol(react.lazy),
                      "_ctor": [Function],
                      "_result": null,
                      "_status": -1,
                    }
                  }
                  path="/home"
                />
              </React.Fragment>
            </UNDEFINED>
          </React.Fragment>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <withRouter(Header) />,
              <UNDEFINED
                fallback={
                  <h1>
                    Loading ...
                  </h1>
                }
              >
                <React.Fragment>
                  <LoginRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    exact={true}
                    path="/"
                  />
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/orders"
                  />
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/parcel/edit/:id"
                  />
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/order/edit/:id"
                  />
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/home"
                  />
                </React.Fragment>
              </UNDEFINED>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <React.Fragment>
                  <LoginRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    exact={true}
                    path="/"
                  />
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/orders"
                  />
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/parcel/edit/:id"
                  />
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/order/edit/:id"
                  />
                  <ProtectedRoute
                    component={
                      Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      }
                    }
                    path="/home"
                  />
                </React.Fragment>,
                "fallback": <h1>
                  Loading ...
                </h1>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <LoginRoute
                      component={
                        Object {
                          "$$typeof": Symbol(react.lazy),
                          "_ctor": [Function],
                          "_result": null,
                          "_status": -1,
                        }
                      }
                      exact={true}
                      path="/"
                    />,
                    <ProtectedRoute
                      component={
                        Object {
                          "$$typeof": Symbol(react.lazy),
                          "_ctor": [Function],
                          "_result": null,
                          "_status": -1,
                        }
                      }
                      path="/orders"
                    />,
                    <ProtectedRoute
                      component={
                        Object {
                          "$$typeof": Symbol(react.lazy),
                          "_ctor": [Function],
                          "_result": null,
                          "_status": -1,
                        }
                      }
                      path="/parcel/edit/:id"
                    />,
                    <ProtectedRoute
                      component={
                        Object {
                          "$$typeof": Symbol(react.lazy),
                          "_ctor": [Function],
                          "_result": null,
                          "_status": -1,
                        }
                      }
                      path="/order/edit/:id"
                    />,
                    <ProtectedRoute
                      component={
                        Object {
                          "$$typeof": Symbol(react.lazy),
                          "_ctor": [Function],
                          "_result": null,
                          "_status": -1,
                        }
                      }
                      path="/home"
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "path": "/orders",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "path": "/parcel/edit/:id",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "path": "/order/edit/:id",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "component": Object {
                        "$$typeof": Symbol(react.lazy),
                        "_ctor": [Function],
                        "_result": null,
                        "_status": -1,
                      },
                      "path": "/home",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": Symbol(react.fragment),
              },
              "type": Symbol(react.suspense),
            },
          ],
          "type": Symbol(react.fragment),
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
